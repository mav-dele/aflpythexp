# simple.logit.model %>%
#         margins(variables = "win.diff")
#
# multiple.logit.model %>%
#         margins(variables = "win.diff")
simple.logit.tbl %>%
ggplot(aes(y = improver.wins, x = win.diff))+
geom_point(colour = wes_palettes$Darjeeling2[1])+
geom_smooth(method = "glm", method.args = list(family = "binomial"),
colour = wes_palettes$Darjeeling2[2])+
labs(title = "Win differential and probability of improvement",
x = "Win differential",
y = "Team improved next season")
simple.logit.ladder.tbl = performance.change.tbl %>%
select(win.diff, improver.ladder)
simple.logit.ladder.model = glm(improver.ladder~win.diff,
family = binomial(link = "logit"),
data = simple.logit.ladder.tbl)
simple.logit.ladder.model.coef = coeftest(simple.logit.ladder.model)
multi.logit.ladder.model = glm(improver.ladder~win.diff+ladder.position+team,
family = binomial(link = "logit"),
data = performance.change.tbl)
multi.logit.ladder.model.coef = coeftest(multi.logit.ladder.model)
texreg::htmlreg(list(simple.logit.ladder.model.coef, multi.logit.ladder.model.coef), doctype = "html", caption = "Logit results - improvement measured by change in ladder position", caption.above = T)
# simple.logit.ladder.model %>%
#   margins(variables = "win.diff")
#
# multi.logit.ladder.model %>%
#   margins(variables = "win.diff")
simple.logit.ladder.tbl %>%
ggplot(aes(y = improver.ladder, x = win.diff))+
geom_point(colour = wes_palettes$Darjeeling2[1])+
geom_smooth(method = "glm", method.args = list(family = "binomial"),
colour = wes_palettes$Darjeeling2[2])+
labs(title = "Win differential and probability of improvement (ladder edition)",
x = "Win differential",
y = "Team improved next season")
View(pyth.tbl)
performance.change.tbl = pyth.tbl %>%
arrange(season, team) %>%
group_by(team) %>%
mutate(next.ladder.position = lead(ladder.position),
ladder.change = ladder.position-next.ladder.position, # Positive equals ladder improvement
next.wins = lead(actual.wins),
wins.change = next.wins-actual.wins,
next.win.pct = lead(actual.win.pct), # Positive equals more wins next year
win.pct.change = next.win.pct-actual.win.pct) %>%
ungroup() %>%
drop_na() %>%
mutate(improver.wins = case_when(wins.change<=0~0, # Same deteriorated
TRUE~1),
improver.ladder = case_when(ladder.change<=0~0,
TRUE~1)) # Improved
performance.change.tbl %>%
ggplot(aes(x = win.diff, y = ladder.change))+
geom_point(colour = wes_palettes$Darjeeling2[1])+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
labs(title = "Under-performing teams tend to improve ladder position the following season",
y = "Change in ladder position in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(colour = wes_palettes$Darjeeling2[1])+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
filter(season>=2000)
performance.change.tbl %>%
filter(season>=2000) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(colour = wes_palettes$Darjeeling2[1])+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
View(performance.change.tbl)
performance.change.tbl %>%
mutate(decade = season - season %% 10)
performance.change.tbl %>%
mutate(decade = season - season %% 10)
test = performance.change.tbl %>%
mutate(decade = str_glue(season - season %% 10, "s"))
test = performance.change.tbl %>%
mutate(decade = str_glue({season - season %% 10}, "s"))
test = performance.change.tbl %>%
mutate(decade = season - season %% 10)
View(test)
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(colour = era)+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era"))
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(colour = era)+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])
performance.change.tbl %>%
ungroup() %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(colour = era)+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])
?scale_color_discrete
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(colours = wes_palette())
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(colours = wes_palette("Darjeeling2"))
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(colours = wes_palette("Darjeeling2", n = 2))
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = wes_palette("Darjeeling2", n = 2))
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = wes_palette("Darjeeling2", n = 2),
names = "Title")+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = wes_palette("Darjeeling2", n = 2),
name = "Playing era")+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[3])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = wes_palette("Darjeeling2", n = 2),
name = "Playing era")+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = c(wes_palettes$Darjeeling2[1], wes_palettes$Darjeeling2[3]),
name = "Playing era")+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
mutate(era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = c(wes_palettes$Darjeeling2[1], wes_palettes$Darjeeling2[4]),
name = "Playing era")+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl = pyth.tbl %>%
arrange(season, team) %>%
group_by(team) %>%
mutate(next.ladder.position = lead(ladder.position),
ladder.change = ladder.position-next.ladder.position, # Positive equals ladder improvement
next.wins = lead(actual.wins),
wins.change = next.wins-actual.wins,
next.win.pct = lead(actual.win.pct), # Positive equals more wins next year
win.pct.change = next.win.pct-actual.win.pct) %>%
ungroup() %>%
drop_na() %>%
mutate(improver.wins = case_when(wins.change<=0~0, # Same deteriorated
TRUE~1),
improver.ladder = case_when(ladder.change<=0~0,
TRUE~1),
era = case_when(season<1990~"VFL era",
TRUE~"AFL era")) # Improved
performance.change.tbl %>%
ggplot(aes(x = win.diff, y = wins.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_y_continuous(limits = c(-15,15))+
scale_colour_manual(values = c(wes_palettes$Darjeeling2[1], wes_palettes$Darjeeling2[4]),
name = "Playing era")+
labs(title = "Under-performing teams tend to improve in number of wins the following season",
y = "Change in number of wins in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
performance.change.tbl %>%
ggplot(aes(x = win.diff, y = ladder.change))+
geom_point(aes(colour = era))+
geom_smooth(method = "lm", colour = wes_palettes$Darjeeling2[2])+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
scale_x_continuous(limits = c(-6, 6))+
scale_colour_manual(values = c(wes_palettes$Darjeeling2[1], wes_palettes$Darjeeling2[4]),
name = "Playing era")+
labs(title = "Under-performing teams tend to improve ladder position the following season",
y = "Change in ladder position in next season",
x = "Win differential")+
#' Use `ggannotate`
geom_text(data = data.frame(x = c(-6, 2.25, -6, 2.25),
y = c(15, 15, -15, -15),
label = c("Under-performed, improved next year",
"Over-performed, improved next year",
"Under-performed, deteriorated next year",
"Over-performed, deteriorated next year")),
mapping = aes(x = x, y = y, label = label),
size = 2.5, hjust = 0L, inherit.aes = FALSE)
pyth.tbl %>%
filter(season == 2022) %>%
mutate(team = fct_reorder(team,- desc(win.diff)),
positive = as.factor(if_else(win.diff>0, 1, 0))) %>%
ggplot(aes(y = team, x = win.diff, fill = positive))+
geom_col()+
geom_vline(xintercept = 0, colour = "black", linetype = "dashed")+
geom_text(aes(label = round(win.diff, 1)), size = 2.5)+
scale_fill_manual(values = wes_palette("GrandBudapest2"))+
labs(title = "2022 win differential",
x = "Win-differential",
y = element_blank())+
theme(legend.position = "none")
pyth.tbl %>%
filter(season == 2022) %>%
mutate(team = fct_reorder(team,- desc(win.diff)),
positive = as.factor(if_else(win.diff>0, 1, 0))) %>%
ggplot(aes(y = team, x = win.diff, fill = positive))+
geom_col()+
geom_vline(xintercept = 0, colour = "black", linetype = "dashed")+
geom_text(aes(label = round(win.diff, 1)), size = 2.5)+
scale_fill_manual(values = wes_palette("GrandBudapest2"))+
labs(title = "2022 win differential",
x = "Win-differential",
y = element_blank())+
theme(legend.position = "none")
pyth.tbl %>%
filter(season == 2022) %>%
select(team, ends_with("position")) %>%
pivot_longer(-team) %>%
group_by(team) %>%
mutate(actual.lad = value[name=="ladder.position"]) %>%
ungroup() %>%
mutate(team = fct_reorder(team, desc(actual.lad))) %>%
ggplot(aes(y = team, x = value, colour = name, group = name))+
geom_point()+
scale_x_continuous(breaks = seq(1, 18, 1))+
scale_colour_manual(values = wes_palette("Darjeeling2"),
labels = c("Actual ladder position", "Pythagorean expected ladder position"))+
labs(title = "2022 actual v predicted ladder",
x = "Ladder position",
y = element_blank())+
theme(legend.position = "bottom",
legend.title = element_blank())
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
select(season, team, actual.wins, pyth.wins, win.diff)) %>%
kable_styling()
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, actual.wins, pyth.wins, win.diff)) %>%
kable_styling()
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, actual.wins, pyth.wins, win.diff)) %>%
arrange(actual.wins) %>%
kable_styling()
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, actual.wins, pyth.wins, win.diff)) %>%
arrange(actual.wins)) %>%
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, actual.wins, pyth.wins, win.diff) %>%
arrange(actual.wins)) %>%
kable_styling()
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, actual.wins, pyth.wins, win.diff) %>%
arrange(-actual.wins)) %>%
kable_styling()
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, actual.wins, pyth.wins, win.diff) %>%
arrange(-win.diff)) %>%
kable_styling()
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, ladder.position, actual.wins, pyth.wins, win.diff) %>%
arrange(-win.diff)) %>%
kable_styling()
pyth.tbl %>%
filter(season == 2022) %>%
select(team, ends_with("position")) %>%
pivot_longer(-team) %>%
group_by(team) %>%
mutate(actual.lad = value[name=="ladder.position"]) %>%
ungroup() %>%
mutate(team = fct_reorder(team, desc(actual.lad))) %>%
ggplot(aes(y = team, x = value, colour = name, group = name))+
geom_point()+
scale_x_continuous(breaks = seq(1, 18, 1))+
scale_colour_manual(values = wes_palette("Darjeeling2"),
labels = c("Actual ladder position", "Pythagorean expected ladder position"))+
labs(title = "2022 actual v predicted ladder",
x = "Ladder position",
y = element_blank())+
theme(legend.position = "bottom",
legend.title = element_blank())
performance.change.tbl %>%
filter(season == 2021) %>%
mutate(class = case_when(win.diff<0&ladder.change>0~"Under - improved",
win.diff>0&ladder.change>0~"Over - improved",
win.diff>0&ladder.change<0~"Under - deteriorated",
win.diff<0&ladder.change<0~"Over - deteriorated")) %>%
ggplot(aes(x = win.diff, y = ladder.change, colour = class))+
geom_point(size = 2)+
geom_vline(xintercept = 0, colour = "grey", linetype = "dashed")+
geom_hline(yintercept = 0, colour = "grey", linetype = "dashed")+
#geom_text(aes(label = team), size = 2.5, hjust=-1)+
geom_text_repel(aes(label = team), size = 2.5, hjust=-1)+
scale_x_continuous(limits = c(-3, 3))+
scale_y_continuous(limits = c(-15, 15))+
scale_colour_manual(values = wes_palette("GrandBudapest2"))+
labs(title = "Win differential 2021 and change in ladder position 2022",
x = "Win differential, 2021",
y = "Change in ladder position (2021 to 2022)")+
theme(legend.position = "none")
If we reflect back on 2021, while Port Adelaide slightly over-performed and Collingwood slightly under-performed, that in of itself doesn't necessarily explain the significant shifts both teams saw in 2022.
kbl(performance.change.tbl %>%
filter(season == 2021) %>%
mutate(across(where(is.numeric), ~round(.x, 1))) %>%
select(season, team, ladder.position, actual.wins, pyth.wins, win.diff) %>%
arrange(-win.diff)) %>%
kable_styling()
